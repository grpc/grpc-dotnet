<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <Description>gRPC and Protocol Buffer compiler for managed C# and native C++ projects.

Add this package to a project that contains .proto files to be compiled to code.
It contains the compilers, include files and project system integration for gRPC
and Protocol buffer service description files necessary to build them on Windows,
Linux and MacOS. Managed runtime is supplied separately in the Grpc.Core package.</Description>
    <PackageTags>gRPC RPC HTTP/2 protoc protobuf protocol buffers</PackageTags>

    <IsGrpcPublishedPackage>true</IsGrpcPublishedPackage>
    
    <!-- If changing targets, change also paths in Google.Protobuf.Tools.targets. -->
    <TargetFrameworks>net45;netstandard1.3</TargetFrameworks>
    <!-- TODO(jtattermusch): add readme -->
    <!--<PackageReadmeFile>README.md</PackageReadmeFile> -->
    
    <VersionPrefix>$(GrpcDotnetVersion)</VersionPrefix>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>Grpc.Tools</PackageId>
    <AssemblyName>Protobuf.MSBuild</AssemblyName>
  </PropertyGroup>

  <PropertyGroup>
    <!-- TODO(jtattermusch): re-enable nullable -->
    <Nullable>disable</Nullable>
    <!-- override the defaults for the grpc-dotnet repository to avoid name conflicts -->
    <ImplicitUsings>disable</ImplicitUsings>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' != 'net45' ">
    <!-- TODO(jtattermusch): replace the NETCORE define by something that's defined automatically by dotnet -->
    <DefineConstants>$(DefineConstants);NETCORE</DefineConstants>
  </PropertyGroup>

  <!-- TODO(jtattermusch): check whether the extra packaging options are needed. -->
  <PropertyGroup>
    <!-- TODO(kkm): Change to "build\" after splitting. -->
    <BuildOutputTargetFolder>build\_protobuf\</BuildOutputTargetFolder>
    <DevelopmentDependency>true</DevelopmentDependency>
    <NoPackageAnalysis>true</NoPackageAnalysis>
  </PropertyGroup>

  <PropertyGroup>
    <!-- .proto for well-known protobuf types -->
    <Assets_ProtoFilesDir>../../input_artifacts/protobuf_wkt_protos/</Assets_ProtoFilesDir>
    <!-- where to look for protoc and protoc plugin binaries binary -->
    <Assets_ProtocBinariesDir>../../input_artifacts/protoc_plugins/</Assets_ProtocBinariesDir>
  </PropertyGroup>

  <ItemGroup>
    <None Pack="true" PackagePath="build\" Include="build\**\*.xml; build\**\*.props; build\**\*.targets;" />

    <!-- Protobuf assets (for Google.Protobuf.Tools) -->
    <_ProtoAssetName Include="any;api;descriptor;duration;empty;field_mask;
                              source_context;struct;timestamp;type;wrappers" />
    <_Asset PackagePath="build/native/include/google/protobuf/" Include="@(_ProtoAssetName->'$(Assets_ProtoFilesDir)%(Identity).proto')" />

    <!-- TODO(kkm): Do not place non-tools under tools/, use build/native/bin/. -->
    <!-- TODO(kkm): Do not package windows x64 builds (#13098). -->
    <_Asset PackagePath="tools/windows_x86/" Include="$(Assets_ProtocBinariesDir)protoc_windows_x86/protoc.exe" />
    <_Asset PackagePath="tools/windows_x64/" Include="$(Assets_ProtocBinariesDir)protoc_windows_x64/protoc.exe" />
    <_Asset PackagePath="tools/linux_x86/" Include="$(Assets_ProtocBinariesDir)protoc_linux_x86/protoc" />
    <_Asset PackagePath="tools/linux_x64/" Include="$(Assets_ProtocBinariesDir)protoc_linux_x64/protoc" />
    <_Asset PackagePath="tools/linux_arm64/" Include="$(Assets_ProtocBinariesDir)protoc_linux_aarch64/protoc" />
    <_Asset PackagePath="tools/macosx_x64/" Include="$(Assets_ProtocBinariesDir)protoc_macos_x64/protoc" />

    <!-- gRPC C# protoc plugin -->
    <_Asset PackagePath="tools/windows_x86/" Include="$(Assets_ProtocBinariesDir)protoc_windows_x86/grpc_csharp_plugin.exe" />
    <_Asset PackagePath="tools/windows_x64/" Include="$(Assets_ProtocBinariesDir)protoc_windows_x64/grpc_csharp_plugin.exe" />
    <_Asset PackagePath="tools/linux_x86/" Include="$(Assets_ProtocBinariesDir)protoc_linux_x86/grpc_csharp_plugin" />
    <_Asset PackagePath="tools/linux_x64/" Include="$(Assets_ProtocBinariesDir)protoc_linux_x64/grpc_csharp_plugin" />
    <_Asset PackagePath="tools/linux_arm64/" Include="$(Assets_ProtocBinariesDir)protoc_linux_aarch64/grpc_csharp_plugin" />
    <_Asset PackagePath="tools/macosx_x64/" Include="$(Assets_ProtocBinariesDir)protoc_macos_x64/grpc_csharp_plugin" />

    <None Include="@(_Asset)" Pack="true" Visible="false" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net45' ">
    <Reference Include="Microsoft.Build.Framework; Microsoft.Build.Utilities.v4.0" Pack="false" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' != 'net45' ">
    <!-- TODO(jtattermusch): add version to dependencies.props -->
    <PackageReference Include="Microsoft.Build.Framework; Microsoft.Build.Utilities.Core" Version="15.6.*" />
    <!--  Set PrivateAssets="All" on all items, even those implicitly added,
          so that they do not become dependencies of this package. -->
    <PackageReference Update="@(PackageReference)" PrivateAssets="All" />
  </ItemGroup>

  <!-- Needed for the net4xx build to work on Unix. See https://github.com/dotnet/designs/pull/33 -->
  <ItemGroup>
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>

</Project>
